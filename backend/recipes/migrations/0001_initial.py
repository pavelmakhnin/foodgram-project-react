# Generated by Django 3.2.13 on 2023-08-27 10:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FavoriteRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'FavoriteRecipes',
                'verbose_name_plural': 'FavoriteRecipes',
                'default_related_name': 'favorites',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title of the Ingredient', max_length=200, verbose_name='Ingridient Name')),
                ('measurement_unit', models.CharField(help_text='Unit to measure the Ingredient', max_length=20, verbose_name='Measurement unit')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
            },
        ),
        migrations.CreateModel(
            name='IngredientsForRecipeInAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(help_text='Write the required Amount of this Ingredient', validators=[django.core.validators.MinValueValidator(1, 'You must specify a volume of at least 1 unit.'), django.core.validators.MaxValueValidator(100, 'You must specify a volume not more than 100 units.')], verbose_name='Amount of the Ingredient')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipe_ingredients', to='recipes.ingredient', verbose_name='Ingredients of the Recipe')),
            ],
            options={
                'verbose_name': 'IngredientRecipe',
                'verbose_name_plural': 'IngredientsRecipe',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title for the Recipe Publishing', max_length=200, verbose_name='Title of the recipe')),
                ('text', models.TextField(help_text='Text to describe the Recipe', verbose_name='Description of the recipe')),
                ('image', models.ImageField(help_text='Image to illustrate the Recipe', upload_to='recipes/images', verbose_name='Image of the recipe')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Coocking time (in minutes)', validators=[django.core.validators.MinValueValidator(1, 'Cooking time is at least 1 minute, if you just read :).'), django.core.validators.MaxValueValidator(2880, 'Cooking time not more than 2880 minutes (2 days)).')], verbose_name='Coocking time')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Publication day')),
                ('author', models.ForeignKey(help_text='Author of the Recipe Publishing', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Author of the recipe')),
                ('ingredients', models.ManyToManyField(help_text='Ingridients needed for the Recipe', related_name='recipes', through='recipes.IngredientsForRecipeInAmount', to='recipes.Ingredient', verbose_name='Ingridients of the recipe')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title for Tag', max_length=200, verbose_name='Tag Name')),
                ('color', models.CharField(help_text='Hex-code for color, for example: #FF0000', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='The entered value is not a color in the format HEX!', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Hex-code')),
                ('slug', models.SlugField(help_text='Title for Slug', unique=True, verbose_name='Slug id')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_shopping_list', to='recipes.recipe', verbose_name='Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Shopping list',
                'verbose_name_plural': 'Shopping lists',
            },
        ),
        migrations.CreateModel(
            name='RecipeTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe', verbose_name='Recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', through='recipes.RecipeTags', to='recipes.Tag', verbose_name='Tag of the recipe'),
        ),
        migrations.AddField(
            model_name='ingredientsforrecipeinamount',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.recipe', verbose_name='Recipe'),
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.UniqueConstraint(fields=('name', 'measurement_unit'), name='unique_ingredient'),
        ),
        migrations.AddField(
            model_name='favoriterecipes',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_favorite', to='recipes.recipe', verbose_name='Recipe'),
        ),
        migrations.AddField(
            model_name='favoriterecipes',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddConstraint(
            model_name='shoppinglist',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_shopping_list_recipe'),
        ),
        migrations.AddConstraint(
            model_name='ingredientsforrecipeinamount',
            constraint=models.UniqueConstraint(fields=('ingredient', 'recipe'), name='unique_ingredient_to_recipe'),
        ),
        migrations.AddConstraint(
            model_name='favoriterecipes',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite_user_recipe'),
        ),
    ]
